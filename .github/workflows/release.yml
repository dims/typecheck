name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (leave empty for snapshot)'
        required: false
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine if this is a manual release
        id: manual
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "is_manual=true" >> $GITHUB_OUTPUT
            if [ -n "${{ github.event.inputs.tag }}" ]; then
              echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
              echo "snapshot=false" >> $GITHUB_OUTPUT
            else
              echo "tag=" >> $GITHUB_OUTPUT
              echo "snapshot=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "is_manual=false" >> $GITHUB_OUTPUT
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
            echo "snapshot=false" >> $GITHUB_OUTPUT
          fi

      - name: Create manual tag (if specified)
        if: steps.manual.outputs.is_manual == 'true' && steps.manual.outputs.tag != ''
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a ${{ steps.manual.outputs.tag }} -m "Release ${{ steps.manual.outputs.tag }}"
          git push origin ${{ steps.manual.outputs.tag }}

      - name: Run GoReleaser (Release)
        if: steps.manual.outputs.snapshot == 'false'
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser (Snapshot)
        if: steps.manual.outputs.snapshot == 'true'
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload snapshot artifacts
        if: steps.manual.outputs.snapshot == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-release
          path: |
            dist/*.tar.gz
            dist/*.zip
            dist/checksums.txt
          retention-days: 30